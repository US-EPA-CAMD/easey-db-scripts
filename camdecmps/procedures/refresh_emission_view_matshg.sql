-- PROCEDURE: camdecmps.refresh_emission_view_matshg(character varying, numeric)

DROP PROCEDURE IF EXISTS camdecmps.refresh_emission_view_matshg(character varying, numeric);

CREATE OR REPLACE PROCEDURE camdecmps.refresh_emission_view_matshg(
	vmonplanid character varying,
	vrptperiodid numeric
)
LANGUAGE 'plpgsql'
AS $BODY$
BEGIN
	CALL camdecmps.load_temp_hourly_test_errors(vMonPlanId, vRptPeriodId);

	DELETE FROM camdecmps.EMISSION_VIEW_MATSHG
	WHERE MON_PLAN_ID = vmonplanid AND RPT_PERIOD_ID = vrptperiodid;

	INSERT INTO camdecmps.EMISSION_VIEW_MATSHG(
		MON_PLAN_ID,
		MON_LOC_ID,
		RPT_PERIOD_ID,
		DATE_HOUR,
		OP_TIME,
		MATS_LOAD,
		MATS_STARTUP_SHUTDOWN,
		HG_CONC_VALUE,
		HG_CONC_SYSTEM_ID,
		HG_CONC_SYS_TYPE,
		HG_CONC_MODC_CD,
		HG_CONC_PMA,
		SAMPLING_TRAIN_COMP_ID1,
		GAS_FLOWMETER_READING1,
		RATIO_STACK_GAS_FLOW_RATE1,
		SAMPLING_TRAIN_COMP_ID2,
		GAS_FLOWMETER_READING2,
		RATIO_STACK_GAS_FLOW_RATE2,
		FLOW_RATE,
		FLOW_MODC,
		FLOW_PMA,
		RPT_PCT_DILUENT,
		DILUENT_PARAMETER,
		CALC_PCT_DILUENT,
		DILUENT_MODC,
		CALC_PCT_H2O,
		H2O_SOURCE,
		F_FACTOR,
		HG_FORMULA_CD,
		RPT_HG_RATE,
		CALC_HG_RATE,
		HG_UOM,
		HG_MODC_CD,
		ERROR_CODES
	)
	SELECT
		HOD.MON_PLAN_ID, 
		HOD.MON_LOC_ID, 
		HOD.RPT_PERIOD_ID,
		camdecmps.format_date_hour(hod.BEGIN_DATE, hod.BEGIN_HOUR, null) AS DATE_HOUR,
		HOD.OP_TIME,
		HOD.MATS_LOAD,
		HOD.MATS_STARTUP_SHUTDOWN,
		MHV.UNADJUSTED_HRLY_VALUE AS HG_CONC_VALUE, 
		MSYS.SYSTEM_IDENTIFIER AS HG_CONC_SYSTEM_ID, 
		SYS_TYP.SYS_TYPE_DESCRIPTION AS HG_CONC_SYS_TYPE,
		MHV.MODC_CD AS HG_CONC_MODC_CD,
		MHV.PCT_AVAILABLE AS HG_CONC_PMA,
		CMP1.COMPONENT_IDENTIFIER AS SAMPLING_TRAIN_COMP_ID1,
		GFM1.GFM_READING AS GAS_FLOWMETER_READING1,
		GFM1.FLOW_TO_SAMPLING_RATIO AS RATIO_STACK_GAS_FLOW_RATE1,
		CMP2.COMPONENT_IDENTIFIER AS SAMPLING_TRAIN_COMP_ID2,
		GFM2.GFM_READING AS GAS_FLOWMETER_READING2,
		GFM2.FLOW_TO_SAMPLING_RATIO AS RATIO_STACK_GAS_FLOW_RATE2,
		FLOW.UNADJUSTED_HRLY_VALUE AS FLOW_RATE,
		FLOW.MODC_CD AS FLOW_MODC,
		FLOW.PCT_AVAILABLE AS FLOW_PMA,
		CASE
			WHEN (DHV.PARAMETER_CD IN ('HCLRE', 'HFRE', 'HGRE' )) THEN NULL
			WHEN (DHV.PARAMETER_CD IN ('HCLRH', 'HFRH', 'HGRH' )) THEN 
				CASE 
					WHEN MF.EQUATION_CD IN ('19-6', '19-7', '19-8', '19-9') THEN CO2C.UNADJUSTED_HRLY_VALUE
				    WHEN MF.EQUATION_CD IN ('19-1', '19-4') THEN O2D.UNADJUSTED_HRLY_VALUE
					WHEN MF.EQUATION_CD IN ('19-2', '19-3', '19-3D', '19-5', '19-5D') THEN O2W.UNADJUSTED_HRLY_VALUE
					ELSE NULL
				END
			ELSE NULL
		END AS RPT_PCT_DILUENT,
		CASE
			WHEN (DHV.PARAMETER_CD IN ('HCLRE', 'HFRE', 'HGRE' )) THEN NULL
			WHEN (DHV.PARAMETER_CD IN ('HCLRH', 'HFRH', 'HGRH' )) THEN 
				CASE
					WHEN MF.EQUATION_CD IN ('19-6', '19-7', '19-8', '19-9') THEN 'CO2'
					WHEN MF.EQUATION_CD IN ('19-1', '19-2', '19-3', '19-3D', '19-4', '19-5', '19-5D') THEN 'O2'
					ELSE NULL
				END
			ELSE NULL
		END AS DILUENT_PARAMETER,
		DHV.CALC_PCT_DILUENT AS CALC_PCT_DILUENT,
		CASE
			WHEN (DHV.PARAMETER_CD IN ('HCLRE', 'HFRE', 'HGRE' )) THEN NULL
			WHEN (DHV.PARAMETER_CD IN ('HCLRH', 'HFRH', 'HGRH' )) THEN 
				CASE
					WHEN MF.EQUATION_CD IN ('19-6', '19-7', '19-8', '19-9') THEN CO2C.MODC_CD 
					WHEN MF.EQUATION_CD IN ('19-1', '19-4') THEN O2D.MODC_CD
					WHEN MF.EQUATION_CD IN ('19-2', '19-3', '19-3D', '19-5', '19-5D') THEN O2W.MODC_CD
					ELSE NULL
				END
			ELSE NULL
		END AS DILUENT_MODC,
		DHV.CALC_PCT_MOISTURE AS CALC_PCT_H2O,
		CASE 
			WHEN DHV.CALC_PCT_MOISTURE IS NULL THEN NULL 
			WHEN H2OD.MODC_CD IS NOT NULL THEN H2OD.MODC_CD
			WHEN H2OM.MODC_CD IS NOT NULL THEN H2OM.MODC_CD
			ELSE 'DF'
		END AS H2O_SOURCE,
		CASE
			WHEN (DHV.PARAMETER_CD IN ('HCLRE', 'HFRE', 'HGRE' )) THEN NULL
			WHEN (DHV.PARAMETER_CD IN ('HCLRH', 'HFRH', 'HGRH' )) THEN 
				CASE
					WHEN MF.EQUATION_CD IN ('19-6', '19-7', '19-8', '19-9') THEN HOD.FC_FACTOR
					WHEN MF.EQUATION_CD IN ('19-1', '19-3', '19-3D', '19-4', '19-5', '19-5D') THEN HOD.FD_FACTOR
					WHEN MF.EQUATION_CD IN ('19-2') THEN HOD.FW_FACTOR
					ELSE NULL
				END
			ELSE NULL
		END AS F_FACTOR,
		MF.EQUATION_CD AS HG_FORMULA_CD,
		DHV.UNADJUSTED_HRLY_VALUE AS RPT_HG_RATE,
		DHV.CALC_UNADJUSTED_HRLY_VALUE AS CALC_HG_RATE,
		CASE
			WHEN DHV.PARAMETER_CD = 'HGRE' THEN 'lb/GWh'
			WHEN DHV.PARAMETER_CD = 'HGRH' THEN 'lb/TBtu'
			WHEN DHV.PARAMETER_CD IN ('HCLRE', 'HFRE', 'SO2RE') THEN 'lb/MWh'
			WHEN DHV.PARAMETER_CD IN ('HCLRH', 'HFRH', 'SO2RH') THEN 'lb/mmBtu'
		END AS HG_UOM,
		DHV.MODC_CD AS HG_MODC_CD,
		HOD.ERROR_CODES
	FROM temp_hourly_test_errors AS HOD 
	JOIN camdecmps.MATS_MONITOR_HRLY_VALUE AS MHV 
		ON HOD.HOUR_ID = MHV.HOUR_ID
		AND HOD.MON_LOC_ID = MHV.MON_LOC_ID
		AND HOD.RPT_PERIOD_ID = MHV.RPT_PERIOD_ID
		AND MHV.PARAMETER_CD = 'HGC'
	JOIN camdecmps.MATS_DERIVED_HRLY_VALUE AS DHV 
		ON HOD.HOUR_ID = DHV.HOUR_ID
		AND HOD.MON_LOC_ID = DHV.MON_LOC_ID
		AND HOD.RPT_PERIOD_ID = DHV.RPT_PERIOD_ID
		AND DHV.PARAMETER_CD IN ( 'HGRE', 'HGRH' )
	LEFT JOIN camdecmps.DERIVED_HRLY_VALUE AS H2OD 
		ON HOD.HOUR_ID = H2OD.HOUR_ID
		AND HOD.MON_LOC_ID = H2OD.MON_LOC_ID
		AND HOD.RPT_PERIOD_ID = H2OD.RPT_PERIOD_ID
		AND H2OD.PARAMETER_CD = 'H2O'
	LEFT JOIN camdecmps.MONITOR_FORMULA AS MF 
		ON MF.MON_FORM_ID = DHV.MON_FORM_ID
	LEFT JOIN camdecmps.MONITOR_HRLY_VALUE AS CO2C 
		ON HOD.HOUR_ID = CO2C.HOUR_ID
		AND HOD.MON_LOC_ID = CO2C.MON_LOC_ID
		AND HOD.RPT_PERIOD_ID = CO2C.RPT_PERIOD_ID
		AND CO2C.PARAMETER_CD = 'CO2C'
	LEFT JOIN camdecmps.MONITOR_HRLY_VALUE AS FLOW 
		ON HOD.HOUR_ID = FLOW.HOUR_ID
		AND HOD.MON_LOC_ID = FLOW.MON_LOC_ID
		AND HOD.RPT_PERIOD_ID = FLOW.RPT_PERIOD_ID
		AND FLOW.PARAMETER_CD = 'FLOW'
	LEFT JOIN camdecmps.MONITOR_HRLY_VALUE AS H2OM 
		ON HOD.HOUR_ID = H2OM.HOUR_ID
		AND HOD.MON_LOC_ID = H2OM.MON_LOC_ID
		AND HOD.RPT_PERIOD_ID = H2OM.RPT_PERIOD_ID
		AND H2OM.PARAMETER_CD = 'H2O'
	LEFT JOIN camdecmps.MONITOR_HRLY_VALUE AS O2D 
		ON HOD.HOUR_ID = O2D.HOUR_ID
		AND HOD.MON_LOC_ID = O2D.MON_LOC_ID
		AND HOD.RPT_PERIOD_ID = O2D.RPT_PERIOD_ID
		AND O2D.PARAMETER_CD = 'O2'
		AND O2D.MOISTURE_BASIS = 'D'
	LEFT JOIN camdecmps.MONITOR_HRLY_VALUE AS O2W 
		ON HOD.HOUR_ID = O2W.HOUR_ID
		AND HOD.MON_LOC_ID = O2W.MON_LOC_ID
		AND HOD.RPT_PERIOD_ID = O2W.RPT_PERIOD_ID
		AND O2W.PARAMETER_CD = 'O2'
		AND O2W.MOISTURE_BASIS = 'W'
	LEFT JOIN camdecmps.MONITOR_SYSTEM AS MSYS 
		ON MSYS.MON_SYS_ID = MHV.MON_SYS_ID
	LEFT JOIN camdecmpsmd.SYSTEM_TYPE_CODE AS SYS_TYP 
		ON SYS_TYP.SYS_TYPE_CD = MSYS.SYS_TYPE_CD
	LEFT JOIN camdecmps.HRLY_GAS_FLOW_METER GFM1 
		ON HOD.HOUR_ID = GFM1.HOUR_ID 
		AND HOD.MON_LOC_ID = GFM1.MON_LOC_ID
		AND HOD.RPT_PERIOD_ID = GFM1.RPT_PERIOD_ID
		AND GFM1.COMPONENT_ID = camdecmps.mats_sampling_train_component( MHV.MON_SYS_ID, HOD.BEGIN_DATE, HOD.BEGIN_HOUR, 1 )
	LEFT JOIN camdecmps.HRLY_GAS_FLOW_METER GFM2 
		ON HOD.HOUR_ID = GFM2.HOUR_ID 
		AND HOD.MON_LOC_ID = GFM2.MON_LOC_ID
		AND HOD.RPT_PERIOD_ID = GFM2.RPT_PERIOD_ID
		AND GFM2.COMPONENT_ID = camdecmps.mats_sampling_train_component( MHV.MON_SYS_ID, HOD.BEGIN_DATE, HOD.BEGIN_HOUR, 2 )
	LEFT JOIN camdecmps.COMPONENT CMP1 
		ON GFM1.COMPONENT_ID = CMP1.COMPONENT_ID
	LEFT JOIN camdecmps.COMPONENT CMP2 
		ON GFM2.COMPONENT_ID = CMP2.COMPONENT_ID;

  CALL camdecmps.refresh_emission_view_count(vmonplanid, vrptperiodid, 'MATSHG');
END
$BODY$;

/*
----------------------------------------------------------------------------------------
FOR TESTING PURPOSES ONLY
----------------------------------------------------------------------------------------
DROP TABLE temp_hourly_test_errors;
CALL camdecmps.load_temp_hourly_test_errors('MDC-94FE334B615548CDB3F22AED7D333EEF', 120);

select a.mon_plan_id, *
from camdecmps.monitor_plan_location a
JOIN camdecmps.MATS_MONITOR_HRLY_VALUE AS MHV 
	ON a.MON_LOC_ID = MHV.MON_LOC_ID
	AND MHV.RPT_PERIOD_ID = 120	
	AND MHV.PARAMETER_CD = 'HGC'
JOIN camdecmps.MATS_DERIVED_HRLY_VALUE AS DHV 
	ON a.MON_LOC_ID = DHV.MON_LOC_ID
	AND DHV.RPT_PERIOD_ID = 120	
	AND DHV.PARAMETER_CD IN ( 'HGRE', 'HGRH' )
	AND MHV.HOUR_ID = DHV.HOUR_ID
order by a.mon_loc_id
*/
