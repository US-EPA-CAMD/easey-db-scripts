-- PROCEDURE: camdecmps.initialize_em_submission_access(numeric, numeric, text, text)

DROP PROCEDURE IF EXISTS camdecmps.initialize_em_submission_access(numeric, numeric, text, text);

CREATE OR REPLACE PROCEDURE camdecmps.initialize_em_submission_access(
	v_calendar_year numeric,
	v_quarter numeric,
	INOUT v_result text,
	INOUT v_error_msg text)
LANGUAGE 'plpgsql'
AS $BODY$
DECLARE
	V_PERIOD_ID CAMDECMPSMD.REPORTING_PERIOD.RPT_PERIOD_ID%TYPE;
	V_BEGINDATE CAMDECMPSAUX.EM_SUBMISSION_ACCESS.ACCESS_BEGIN_DATE%TYPE;
	V_ENDDATE   CAMDECMPSAUX.EM_SUBMISSION_ACCESS.ACCESS_END_DATE%TYPE;
BEGIN

	IF V_QUARTER = 1 THEN
		V_BEGINDATE := TO_DATE('04/01/' || V_CALENDAR_YEAR, 'mm/dd/yyyy');
	ELSIF V_QUARTER = 2 THEN
		V_BEGINDATE := TO_DATE('07/01/' || V_CALENDAR_YEAR, 'mm/dd/yyyy');
	ELSIF V_QUARTER = 3 THEN
		V_BEGINDATE := TO_DATE('10/01/' || V_CALENDAR_YEAR, 'mm/dd/yyyy');
	ELSIF V_QUARTER = 4 THEN
		V_BEGINDATE := TO_DATE('01/01/' || TO_CHAR(V_CALENDAR_YEAR + 1), 'mm/dd/yyyy');
	END IF;
	
	V_ENDDATE := V_BEGINDATE + 29;
	
	SELECT RPT_PERIOD_ID INTO V_PERIOD_ID
	FROM CAMDECMPSMD.REPORTING_PERIOD I
	WHERE CALENDAR_YEAR = V_CALENDAR_YEAR AND 
		QUARTER = V_QUARTER;
	
	DELETE FROM CAMDECMPSAUX.EM_SUBMISSION_ACCESS
	WHERE RPT_PERIOD_ID = V_PERIOD_ID AND
		EM_SUB_TYPE_CD = 'INITIAL' AND
		EM_STATUS_CD = 'APPRVD';
	
	INSERT INTO CAMDECMPSAUX.EM_SUBMISSION_ACCESS(
		MON_PLAN_ID,
		RPT_PERIOD_ID,
		ACCESS_BEGIN_DATE,
		ACCESS_END_DATE,
		EM_SUB_TYPE_CD,
		RESUB_EXPLANATION,
		USERID,
		ADD_DATE,
		UPDATE_DATE,
		EM_STATUS_CD,
		DATA_LOADED_FLG,
		SUB_AVAILABILITY_CD
	)
	SELECT X.MON_PLAN_ID,
		V_PERIOD_ID,
		V_BEGINDATE,
		V_ENDDATE,
		'INITIAL',
		NULL,
		'ECMPSOPN',
		CURRENT_TIMESTAMP,
		NULL,
		'APPRVD',
		NULL,
		X.SUB_AVAILABILITY_CD
	FROM (
		SELECT EM.*
		FROM CAMDECMPS.MONITOR_PLAN MP, (
			SELECT MON_PLAN_ID,
				SUBSTR(
					camdecmps.get_submission_status(
						MON_PLAN_ID, 
						V_CALENDAR_YEAR, 
						V_QUARTER
					),
					1,
					7
				) AS SUB_AVAILABILITY_CD
			FROM CAMDECMPS.MONITOR_PLAN
		) AS EM
		WHERE EM.MON_PLAN_ID = MP.MON_PLAN_ID AND 
			EM.SUB_AVAILABILITY_CD IS NOT NULL
	) AS X;

	V_RESULT := 'T';
	
	EXCEPTION
		WHEN OTHERS THEN
			V_RESULT    := 'F';
			V_ERROR_MSG := SQLERRM;
			ROLLBACK;
END;
$BODY$;
