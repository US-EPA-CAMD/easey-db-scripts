-- Table: camdecmps.monitor_location

-- DROP TABLE camdecmps.monitor_location;

CREATE TABLE IF NOT EXISTS camdecmps.monitor_location
(
    mon_loc_id character varying(45) COLLATE pg_catalog."default" NOT NULL,
    stack_pipe_id character varying(45) COLLATE pg_catalog."default",
    unit_id numeric(38,0),
    userid character varying(25) COLLATE pg_catalog."default",
    add_date timestamp without time zone,
    update_date timestamp without time zone,
    CONSTRAINT pk_monitor_location PRIMARY KEY (mon_loc_id),
    CONSTRAINT fk_monitor_location_stp FOREIGN KEY (stack_pipe_id)
        REFERENCES camdecmps.stack_pipe (stack_pipe_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_monitor_location_unt FOREIGN KEY (unit_id)
        REFERENCES camd.unit (unit_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

COMMENT ON TABLE camdecmps.monitor_location
    IS 'Stack characteristic data applicable for the configuration type identified in the monitoring plan.  Name of stack must being with "CS" followed by up to four alphanumeric characters. Record Type 503.';

COMMENT ON COLUMN camdecmps.monitor_location.mon_loc_id
    IS 'Unique identifier of a monitoring location record. ';

COMMENT ON COLUMN camdecmps.monitor_location.stack_pipe_id
    IS 'Unique identifier of a stack or pipe record. ';

COMMENT ON COLUMN camdecmps.monitor_location.unit_id
    IS 'Unique identifier of a unit record which is generated by the EPA Host System. ';

COMMENT ON COLUMN camdecmps.monitor_location.userid
    IS 'User account or source of data that added or updated record. ';

COMMENT ON COLUMN camdecmps.monitor_location.add_date
    IS 'Date and time in which record was added. ';

COMMENT ON COLUMN camdecmps.monitor_location.update_date
    IS 'Date and time in which record was last updated. ';

-- Index: idx_monitor_location_stp

-- DROP INDEX camdecmps.idx_monitor_location_stp;

CREATE INDEX IF NOT EXISTS idx_monitor_location_stp
    ON camdecmps.monitor_location USING btree
    (stack_pipe_id COLLATE pg_catalog."default" ASC NULLS LAST);

-- Index: idx_monitor_location_unt

-- DROP INDEX camdecmps.idx_monitor_location_unt;

CREATE INDEX IF NOT EXISTS idx_monitor_location_unt
    ON camdecmps.monitor_location USING btree
    (unit_id ASC NULLS LAST);
