-- PROCEDURE: camdecmpswks.refresh_emission_view_co2cems(character varying, numeric)

-- DROP PROCEDURE camdecmpswks.refresh_emission_view_co2cems(character varying, numeric);

CREATE OR REPLACE PROCEDURE camdecmpswks.refresh_emission_view_co2cems(
	vmonplanid character varying,
	vrptperiodid numeric)
LANGUAGE 'plpgsql'
AS $BODY$
BEGIN
	DELETE FROM camdecmpswks.EMISSION_VIEW_CO2CEMS 
		WHERE MON_PLAN_ID = vmonplanid AND RPT_PERIOD_ID = vrptperiodid;

	INSERT INTO camdecmpswks.EMISSION_VIEW_CO2CEMS
           (MON_PLAN_ID
           ,MON_LOC_ID
           ,RPT_PERIOD_ID
           ,DATE_HOUR
           ,OP_TIME
           ,UNIT_LOAD
           ,LOAD_UOM
           ,COMPONENT_TYPE
           ,RPT_PCT_CO2
           ,PCT_CO2_USED
           ,CO2_MODC
           ,CO2_PMA
           ,UNADJ_FLOW
           ,CALC_FLOW_BAF
           ,RPT_ADJ_FLOW
           ,ADJ_FLOW_USED
           ,FLOW_MODC
           ,FLOW_PMA
           ,PCT_H2O_USED
           ,SOURCE_H2O_VALUE
           ,CO2_FORMULA_CD
           ,RPT_CO2_MASS_RATE
           ,CALC_CO2_MASS_RATE
           ,ERROR_CODES)
		
		SELECT DISTINCT
				HOD.MON_PLAN_ID, 
				HOD.MON_LOC_ID, 
				HOD.RPT_PERIOD_ID, 
				camdecmpswks.format_date_hour(hod.BEGIN_DATE, hod.BEGIN_HOUR, null),
				HOD.OP_TIME, 
				HOD.HR_LOAD AS UNIT_LOAD, 
		        HOD.LOAD_UOM_CD AS LOAD_UOM,
				CASE 
					WHEN (CO2C_DHV.HOUR_ID IS NOT NULL) THEN 'O2'
					WHEN (CO2C_MHV.HOUR_ID IS NOT NULL) THEN 'CO2'
					ELSE NULL
				END AS COMPONENT_TYPE,
				CASE 
					WHEN (CO2C_DHV.HOUR_ID IS NOT NULL) THEN CO2C_DHV.ADJUSTED_HRLY_VALUE
					WHEN (CO2C_MHV.HOUR_ID IS NOT NULL) THEN CO2C_MHV.UNADJUSTED_HRLY_VALUE
					ELSE NULL
				END AS RPT_PCT_CO2,
				DHV.CALC_PCT_DILUENT AS PCT_CO2_USED,
				CASE 
					WHEN (CO2C_DHV.HOUR_ID IS NOT NULL) THEN CO2C_DHV.MODC_CD
					WHEN (CO2C_MHV.HOUR_ID IS NOT NULL) THEN CO2C_MHV.MODC_CD
					ELSE NULL
				END AS CO2_MODC,
				CASE 
					WHEN (CO2C_DHV.HOUR_ID IS NOT NULL) THEN CO2C_DHV.PCT_AVAILABLE
					WHEN (CO2C_MHV.HOUR_ID IS NOT NULL) THEN CO2C_MHV.PCT_AVAILABLE
					ELSE NULL
				END AS CO2_PMA,
				FLOW_MHV.UNADJUSTED_HRLY_VALUE AS UNADJ_FLOW,
				FLOW_MHV.APPLICABLE_BIAS_ADJ_FACTOR AS CALC_FLOW_BAF,	
				FLOW_MHV.ADJUSTED_HRLY_VALUE AS RPT_ADJ_FLOW,
				FLOW_MHV.CALC_ADJUSTED_HRLY_VALUE AS ADJ_FLOW_USED,
				FLOW_MHV.MODC_CD AS FLOW_MODC,
				FLOW_MHV.PCT_AVAILABLE AS FLOW_PMA,
				DHV.CALC_PCT_MOISTURE AS PCT_H2O_USED, 
				CASE WHEN (DHV.CALC_PCT_MOISTURE IS NOT NULL) THEN 
						CASE WHEN (H2O_DHV.MODC_CD IS NOT NULL) THEN H2O_DHV.MODC_CD 
							 WHEN (H2O_MHV.MODC_CD IS NOT NULL) THEN H2O_MHV.MODC_CD 
							ELSE 'DF'
						END 
					ELSE NULL
				END AS SOURCE_H2O_VALUE,
				MF.EQUATION_CD AS CO2_FORMULA_CD,
				DHV.ADJUSTED_HRLY_VALUE AS RPT_CO2_MASS_RATE,
				DHV.CALC_ADJUSTED_HRLY_VALUE AS CALC_CO2_MASS_RATE,
				HOD.ERROR_CODES
		FROM	temp_hourly_errors AS HOD 
				INNER JOIN camdecmpswks.DERIVED_HRLY_VALUE AS DHV ON ((DHV.HOUR_ID = HOD.HOUR_ID) AND (DHV.PARAMETER_CD = 'CO2'))
				INNER JOIN camdecmpswks.MONITOR_HRLY_VALUE AS FLOW_MHV ON HOD.HOUR_ID = FLOW_MHV.HOUR_ID AND FLOW_MHV.PARAMETER_CD = 'FLOW' 
				LEFT OUTER JOIN camdecmpswks.DERIVED_HRLY_VALUE AS CO2M_DHV ON ((CO2M_DHV.HOUR_ID = HOD.HOUR_ID) AND (CO2M_DHV.PARAMETER_CD = 'CO2M'))
				LEFT OUTER JOIN camdecmpswks.MONITOR_FORMULA AS MF ON DHV.MON_FORM_ID = MF.MON_FORM_ID 
				LEFT OUTER JOIN camdecmpswks.DERIVED_HRLY_VALUE AS CO2C_DHV ON ((CO2C_DHV.HOUR_ID = HOD.HOUR_ID) AND (CO2C_DHV.PARAMETER_CD = 'CO2C'))  
				LEFT OUTER JOIN camdecmpswks.MONITOR_HRLY_VALUE AS CO2C_MHV ON ((CO2C_MHV.HOUR_ID = HOD.HOUR_ID) AND (CO2C_MHV.PARAMETER_CD = 'CO2C'))  
				LEFT OUTER JOIN camdecmpswks.MONITOR_HRLY_VALUE AS H2O_MHV ON DHV.HOUR_ID = H2O_MHV.HOUR_ID AND H2O_MHV.PARAMETER_CD = 'H2O' 
				LEFT OUTER JOIN camdecmpswks.DERIVED_HRLY_VALUE AS H2O_DHV ON DHV.HOUR_ID = H2O_DHV.HOUR_ID AND H2O_DHV.PARAMETER_CD = 'H2O' 
				LEFT OUTER JOIN camdecmpswks.MONITOR_DEFAULT AS H2O_MD ON (HOD.MON_LOC_ID = H2O_MD.MON_LOC_ID) AND (H2O_MD.PARAMETER_CD = 'H2O') AND (H2O_MD.DEFAULT_PURPOSE_CD = 'PM') AND (camdecmpswks.emissions_monitor_default_active(H2O_MD.BEGIN_DATE, H2O_MD.BEGIN_HOUR, H2O_MD.END_DATE, H2O_MD.END_HOUR, HOD.BEGIN_DATE, HOD.BEGIN_HOUR) = 1);
END
$BODY$;
