-- PROCEDURE: camdecmpswks.refresh_emission_view_hicems(character varying, numeric)

-- DROP PROCEDURE IF EXISTS camdecmpswks.refresh_emission_view_hicems(character varying, numeric);

CREATE OR REPLACE PROCEDURE camdecmpswks.refresh_emission_view_so2appd(
	vmonplanid character varying,
	vrptperiodid numeric)
LANGUAGE 'plpgsql'
AS $BODY$
BEGIN
	DELETE FROM camdecmpswks.EMISSION_VIEW_SO2APPD 
		WHERE MON_PLAN_ID = vmonplanid AND RPT_PERIOD_ID = vrptperiodid;

	INSERT INTO camdecmpswks.EMISSION_VIEW_SO2APPD
           (MON_PLAN_ID
           ,MON_LOC_ID
           ,RPT_PERIOD_ID
           ,DATEHOUR
           ,OP_TIME
           ,FUEL_SYS_ID
           ,FUEL_TYPE
           ,FUEL_USE_TIME
           ,UNIT_LOAD
           ,LOAD_UOM
           ,CALC_FUEL_FLOW
           ,FUEL_FLOW_UOM
           ,FUEL_FLOW_SODC
           ,SULFUR_CONTENT
           ,SULFUR_UOM
           ,SULFUR_SAMPLING_TYPE
           ,DEFAULT_SO2_EMISSION_RATE
           ,CALC_HI_RATE
           ,FORMULA_CD
           ,RPT_SO2_MASS_RATE
           ,CALC_SO2_MASS_RATE
           ,SUMMATION_FORMULA_CD
           ,RPT_SO2_MASS_RATE_ALL_FUELS
           ,CALC_SO2_MASS_RATE_ALL_FUELS
           ,ERROR_CODES)
		
		SELECT DISTINCT
				HOD.MON_PLAN_ID, 
				HOD.MON_LOC_ID, 
				HOD.RPT_PERIOD_ID,
				camdecmpswks.format_date_hour(hod.BEGIN_DATE, hod.BEGIN_HOUR, null),
				HOD.OP_TIME,
				MS.SYSTEM_IDENTIFIER AS FUEL_SYS_ID,
				HFF.FUEL_CD AS FUEL_TYPE,
				HFF.FUEL_USAGE_TIME AS FUEL_USE_TIME,
				HOD.HR_LOAD AS UNIT_LOAD, 
				HOD.LOAD_UOM_CD AS LOAD_UOM, 
				CASE WHEN (MF.EQUATION_CD IN ('D-2', 'D-4')) THEN
					CASE 
						WHEN (FC.FUEL_GROUP_CD = 'GAS') THEN HFF.CALC_VOLUMETRIC_FLOW_RATE
						ELSE HFF.CALC_MASS_FLOW_RATE
					END 
				END AS CALC_FUEL_FLOW,
				CASE WHEN (MF.EQUATION_CD IN ('D-2', 'D-4')) THEN
					CASE 
						WHEN (FC.FUEL_GROUP_CD = 'GAS') THEN HFF.VOLUMETRIC_UOM_CD
						ELSE 'LBHR'
					END
				END AS FUEL_FLOW_UOM,
				CASE WHEN (MF.EQUATION_CD IN ('D-2', 'D-4')) THEN
					CASE 
						WHEN (FC.FUEL_GROUP_CD = 'GAS') THEN HFF.SOD_VOLUMETRIC_CD
						ELSE HFF.SOD_MASS_CD
					END
				END AS FUEL_FLOW_SODC,
				HPFF_SULFUR.PARAM_VAL_FUEL AS SULFUR_CONTENT,
				HPFF_SULFUR.PARAMETER_UOM_CD AS SULFUR_UOM,
				HPFF_SULFUR.SAMPLE_TYPE_CD AS SULFUR_SAMPLING_TYPE,
				HPFF_SO2R.PARAM_VAL_FUEL AS DEFAULT_SO2_EMISSION_RATE,
				HPFF_HI.CALC_PARAM_VAL_FUEL AS CALC_HI_RATE,
				MF.EQUATION_CD AS FORMULA_CD,
				HPFF_SO2.PARAM_VAL_FUEL AS RPT_SO2_MASS_RATE,
				HPFF_SO2.CALC_PARAM_VAL_FUEL AS CALC_SO2_MASS_RATE,
				SUMMATION_MF.EQUATION_CD AS SUMMATION_FORMULA_CD,
				DHV_SO2.ADJUSTED_HRLY_VALUE AS RPT_SO2_MASS_RATE_ALL_FUELS,
				DHV_SO2.CALC_ADJUSTED_HRLY_VALUE AS CALC_SO2_MASS_RATE_ALL_FUELS,
				HOD.ERROR_CODES
		FROM temp_hourly_errors AS HOD 
				INNER JOIN camdecmpswks.HRLY_FUEL_FLOW HFF ON HOD.HOUR_ID = HFF.HOUR_ID
				INNER JOIN camdecmpswks.HRLY_PARAM_FUEL_FLOW HPFF_SO2 ON ((HFF.HRLY_FUEL_FLOW_ID = HPFF_SO2.HRLY_FUEL_FLOW_ID) AND (HPFF_SO2.PARAMETER_CD = 'SO2'))
				LEFT OUTER JOIN camdecmpswks.HRLY_PARAM_FUEL_FLOW HPFF_SULFUR ON ((HFF.HRLY_FUEL_FLOW_ID = HPFF_SULFUR.HRLY_FUEL_FLOW_ID) AND (HPFF_SULFUR.PARAMETER_CD = 'SULFUR'))
				LEFT OUTER JOIN camdecmpswks.HRLY_PARAM_FUEL_FLOW HPFF_SO2R ON ((HFF.HRLY_FUEL_FLOW_ID = HPFF_SO2R.HRLY_FUEL_FLOW_ID) AND (HPFF_SO2R.PARAMETER_CD = 'SO2R'))
				LEFT OUTER JOIN camdecmpswks.HRLY_PARAM_FUEL_FLOW HPFF_HI ON ((HFF.HRLY_FUEL_FLOW_ID = HPFF_HI.HRLY_FUEL_FLOW_ID) AND (HPFF_HI.PARAMETER_CD = 'HI'))
				LEFT OUTER JOIN camdecmpswks.MONITOR_SYSTEM MS ON HFF.MON_SYS_ID = MS.MON_SYS_ID
				LEFT OUTER JOIN camdecmpswks.DERIVED_HRLY_VALUE AS DHV_SO2 ON ((DHV_SO2.HOUR_ID = HOD.HOUR_ID) AND (DHV_SO2.PARAMETER_CD = 'SO2'))
				LEFT OUTER JOIN camdecmpswks.MONITOR_FORMULA AS MF ON HPFF_SO2.MON_FORM_ID = MF.MON_FORM_ID
				LEFT OUTER JOIN camdecmpswks.MONITOR_FORMULA AS SUMMATION_MF ON DHV_SO2.MON_FORM_ID = SUMMATION_MF.MON_FORM_ID
				LEFT OUTER JOIN camdecmpsmd.FUEL_CODE FC ON FC.FUEL_CD = HFF.FUEL_CD;
END
$BODY$;
